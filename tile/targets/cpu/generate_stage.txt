
passes: [
{
    name: "localize_tmps",
    pass: {
        [type.vertex.ai/vertexai.tile.codegen.proto.LocalizePass] {
        reqs: ["program"],
        ref_reqs: ["tmp"]
    }
},
{
    name: "prune_refs",
    pass: {
        [type.vertex.ai/vertexai.tile.codegen.proto.PruneRefinementsPass] {
        reqs: ["program"]
    }
    }
},
{
    name: "mlir_nop",
    pass: {
            [type.vertex.ai/vertexai.tile.codegen.proto.MLIR_NopPass] {
    }
    }
},
{
    name: "pad",
    pass: {
        [type.vertex.ai/vertexai.tile.codegen.proto.PadPass] {
        reqs: ["main"],
    }
    }
},
{
    name: "mlir_auto_stencil",
    pass: {
            [type.vertex.ai/vertexai.tile.codegen.proto.MLIR_AutoStencilPass] {
        reqs: ["agg_op_add", "comb_op_mul"],
        startup_cost: 32,
        only_even: [true, true, true],
        only_po2: [false, false, false],
        special_stencils: [
            {
                startup_cost: 32,
                idxs: [
                    { name: "m", size: 64, outs: [1], ins: [0, 1] },
                    { name: "n", size: 16, outs: [-1], ins: [-1, 0] },
                    { name: "k", size: 3, outs: [0], ins: [1, -1] }
                ]
            }
        ]
    }
    }
},
{
    name: "fuse_mac_eltwise",
    pass: {
        [type.vertex.ai/vertexai.tile.codegen.proto.FusionPass] {
        a_reqs: ["mac"],
        b_reqs: ["eltwise"],
        fused_set: ["mac"],
    }
    }
},
{
    name: "fuse_mac_inner_eltwise",
    pass: {
        [type.vertex.ai/vertexai.tile.codegen.proto.FusionPass] {
        parent_reqs: ["mac"],
        fused_set: ["eltwise"],
        exclude: ["mac_inner"],
        no_inner: true,
    }
    }
},
{
    name: "eltwise fuse",
    pass: {
        [type.vertex.ai/vertexai.tile.codegen.proto.FusionPass] {
        parent_reqs: ["main"],
        a_reqs: ["eltwise"],
        b_reqs: ["eltwise"],
        fused_set: ["eltwise"],
    }
    }
},
{
    name: "localize_main",
    pass: {
        [type.vertex.ai/vertexai.tile.codegen.proto.LocalizePass] {
    reqs: ["main"]
    }
    }
},
{
    name: "scalarize_main",
    pass: {
        [type.vertex.ai/vertexai.tile.codegen.proto.ScalarizePass] {
    reqs: ["main"]
    }
    }
},
{
    name: "prune_idxs",
    pass: {
        [type.vertex.ai/vertexai.tile.codegen.proto.PruneIndexesPass] {
    reqs: ["program"]
    }
    }
},
{
    name: "tile_contract",
    pass: {
        [type.vertex.ai/vertexai.tile.codegen.proto.AutotilePass] {
    reqs: ["contraction"],
    inner_set: ["contract_inner"],
    outer_set: ["contract_outer", "kernel", "cpu_thread"],
    acc_idxs: false,
    input_cost: 0.0,
    output_cost: 0.0,
    split_factor: -100.0,
    cache_width: PARAMS[cfg].CACHE_WIDTH,
    only_po2: true
    }
    }
},
{
    name: "dead_code_elimination",
    pass: {
        [type.vertex.ai/vertexai.tile.codegen.proto.DeadCodeEliminationPass] {
    reqs: ["all"]
    }
    }
},
{
    name: "locate_program",
    pass: {
        [type.vertex.ai/vertexai.tile.codegen.proto.LocateBlocksRefinementsRecursivelyPass] {
        reqs: ["program"],
        skip_tags: ["user"],
        loc: { devs: [{ name: "DRAM" }] }
        }
    ]
},
{
    name: "prune_refs",
    pass: {
        [type.vertex.ai/vertexai.tile.codegen.proto.PruneRefinementsPass] {
    reqs: ["program"]
    }
    }
},
{
    name: "mlir_agginit",
    pass: {
            [type.vertex.ai/vertexai.tile.codegen.proto.MLIR_AggInitPass] {
        reqs: ["contraction"],
        parallel: true,
        cache_line: 64
            }
    }
}
]
